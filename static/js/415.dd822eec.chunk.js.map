{"version":3,"file":"static/js/415.dd822eec.chunk.js","mappings":"6NAKMA,EAAOC,EAAAA,GAAAA,GAAH,iEAuBV,EAlBuB,SAAAC,GACrB,MAA+BA,EAAMC,MAA7BC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,eAENC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,WACE,SAAC,KAAD,CAAMQ,GAAE,mBAAcJ,GAAMK,MAAO,CAAEC,KAAMJ,GAA3C,SACGD,KAIR,ECDD,EAlBmB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACpB,OACE,wBACGA,EAAOC,KAAK,SAAAV,GACX,IAAQE,EAAOF,EAAPE,GACR,OACE,SAAC,EAAD,CAAyBD,MAAOD,GAAXE,EAGxB,KAGN,C,+GCmCD,UA3Ca,WACX,OAAsCS,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IAEbE,EAAAA,EAAAA,MACGC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAEP,OAAgB,IAAZA,EACKC,EAEL,yFAGGP,GAAe,OAAIM,GAC3B,IACAE,OAAM,SAAAC,GAEL,OADAC,EAAYD,GACLE,QAAQC,IAAIH,EACpB,IACAI,SAAQ,WACPX,GAAa,EACd,GACJ,GAAE,IAEH,IAAMK,EAAgB,SAAAO,GACpBC,EAAAA,OAAAA,QAAA,UAAkBD,GACnB,EAEKJ,EAAc,WAClBK,EAAAA,OAAAA,MAAa,gDACd,EAED,OACE,iCACE,4CACCd,GAAa,SAAC,IAAD,KAAc,SAAC,IAAD,CAAYL,OAAQG,MAGrD,C,iMC9CKiB,EAAU,mCAIT,SAAeZ,IAAtB,4CAAO,OAAP,oBAAO,sGACkBa,EAAAA,EAAAA,IAAA,uCAA0CD,IAD5D,uBACGE,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACcH,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAAmDI,IADjE,cACCC,EADD,yBAEEA,EAAKH,MAFP,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACcN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBAAuCP,IADrD,cACCQ,EADD,yBAEEA,EAAKN,MAFP,kEAKA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,yFACkBN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACgBP,IAFlC,uBACGE,EADH,EACGA,KADH,kBAIEA,EAAKZ,SAJP,kEAOA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BH,GAA7B,yFACkBN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACgBP,IAFlC,uBACGE,EADH,EACGA,KADH,kBAIEA,EAAKS,MAJP,kEAxBPV,EAAAA,EAAAA,SAAAA,QADiB,+B","sources":["components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/moviesAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Item = styled.li`\n  font-size: 12px;\n  font-weight: 400;\n`;\n\nconst MoviesListItem = movie => {\n  const { id, original_title } = movie.props;\n\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link to={`/movies/:${id}`} state={{ from: location }}>\n        {original_title}\n      </Link>\n    </Item>\n  );\n};\n\nMoviesListItem.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default MoviesListItem;\n","import PropTypes from 'prop-types';\nimport MoviesListItem from 'components/MoviesListItem/MoviesListItem';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map( movie => {\n        const { id } = movie;\n        return (\n          <MoviesListItem key={id} props={movie} >\n          </MoviesListItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","import React, { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { getMovies } from 'services/moviesAPI';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getMovies()\n      .then(({ results }) => {\n\n        if (results === 0) {\n          return notifyWarning(\n            // 'Sorry, nothing was found for your request, try something else.'\n            'Сталася помилка'\n          );\n        }\n        return setTrendMovies([...results]);\n      })\n      .catch(error => {\n        notifyError(error);\n        return console.log(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const notifyWarning = text => {\n    Notify.warning(`${text}`);\n  };\n\n  const notifyError = () => {\n    Notify.error('Oops, something went wrong, please try again.');\n  };\n\n  return (\n    <>\n      <h3>Trending today:</h3>\n      {isLoading ? (<Loader/>) : (<MoviesList movies={trendMovies}/>)}\n    </>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst API_KEY = 'a0869b2b27b58a659702b4629a364211';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getMovies() {\n  const { data } = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return data;\n}\n\nexport async function getMovieSearch(query){\n  const rest = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`)\n  return rest.data;\n}\n\nexport async function getMoviesById(movieId) {\n  const resp = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return resp.data;\n}\n\nexport async function getMoviesReviews(movieId) {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n}\n\nexport async function getMoviesCast(movieId) {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n}\n"],"names":["Item","styled","movie","props","id","original_title","location","useLocation","to","state","from","movies","map","useState","trendMovies","setTrendMovies","isLoading","setIsLoading","useEffect","getMovies","then","results","notifyWarning","catch","error","notifyError","console","log","finally","text","Notify","API_KEY","axios","data","getMovieSearch","query","rest","getMoviesById","movieId","resp","getMoviesReviews","getMoviesCast","cast"],"sourceRoot":""}